name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      
      - name: Run Go tests
        run: go test ./internal/config/
      
      - name: Check script syntax
        run: |
          bash -n install.sh
          
  build:
    name: Build & Release
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          
      - name: Build binaries
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          
          # Build warpclip client (for remote servers)
          go build -ldflags="-s -w" -o dist/warpclip-${{ matrix.suffix }} cmd/warpclip/main.go
          
          # Build warpclipd daemon (only for macOS)
          if [ "${{ matrix.goos }}" = "darwin" ]; then
            go build -ldflags="-s -w" -o dist/warpclipd-${{ matrix.suffix }} cmd/warpclipd/main.go
          fi
          
      - name: Create checksums
        run: |
          cd dist
          for file in *-${{ matrix.suffix }}; do
            if [ -f "$file" ]; then
              sha256sum "$file" >> checksums-${{ matrix.suffix }}.txt
            fi
          done
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.suffix }}
          path: |
            dist/*-${{ matrix.suffix }}
            dist/checksums-${{ matrix.suffix }}.txt

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Prepare release assets
        run: |
          mkdir -p dist
          
          # Move all binaries to dist/
          find artifacts -name "warpclip*" -type f -exec cp {} dist/ \;
          find artifacts -name "checksums*.txt" -type f -exec cp {} dist/ \;
          
          # Create combined checksums file
          cat dist/checksums-*.txt > dist/checksums.txt
          
          # Create source archive
          tar -czf dist/warpclip-${{ steps.get_version.outputs.VERSION }}.tar.gz \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'dist' \
            --exclude 'artifacts' \
            .
          
          # Add source archive checksum
          cd dist
          sha256sum warpclip-${{ steps.get_version.outputs.VERSION }}.tar.gz >> checksums.txt
          
          ls -la
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: WarpClip ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            dist/*
          body: |
            # WarpClip ${{ steps.get_version.outputs.VERSION }}
            
            Remote-to-local clipboard integration for Warp terminal users.
            
            ## Installation
            
            ### Homebrew (macOS)
            ```bash
            brew install mquinnv/tap/warpclip
            ```
            
            ### Pre-built Binaries
            
            **Linux (amd64)**
            ```bash
            curl -L https://github.com/mquinnv/warpclip/releases/download/v${{ steps.get_version.outputs.VERSION }}/warpclip-linux-amd64 -o warpclip
            chmod +x warpclip
            sudo mv warpclip /usr/local/bin/
            ```
            
            **macOS (Apple Silicon)**
            ```bash
            curl -L https://github.com/mquinnv/warpclip/releases/download/v${{ steps.get_version.outputs.VERSION }}/warpclip-darwin-arm64 -o warpclip
            chmod +x warpclip
            sudo mv warpclip /usr/local/bin/
            ```
            
            **macOS (Intel)**
            ```bash
            curl -L https://github.com/mquinnv/warpclip/releases/download/v${{ steps.get_version.outputs.VERSION }}/warpclip-darwin-amd64 -o warpclip
            chmod +x warpclip
            sudo mv warpclip /usr/local/bin/
            ```
            
            ## From Source
            ```bash
            git clone https://github.com/mquinnv/warpclip.git
            cd warpclip
            ./install.sh
            ```
            
            ## Checksums
            
            See the `checksums.txt` file for SHA256 verification of all binaries.

  update-homebrew:
    name: Update Homebrew Formula
    needs: create-release
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Checkout homebrew-tap repository
        uses: actions/checkout@v4
        with:
          repository: mquinnv/homebrew-tap
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-tap
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Download source archive
        run: |
          curl -L https://github.com/mquinnv/warpclip/archive/refs/tags/v${{ steps.get_version.outputs.VERSION }}.tar.gz -o warpclip-${{ steps.get_version.outputs.VERSION }}.tar.gz
          SHA256=$(shasum -a 256 warpclip-${{ steps.get_version.outputs.VERSION }}.tar.gz | awk '{print $1}')
          echo "SHA256=$SHA256" >> $GITHUB_OUTPUT
          echo "Source SHA256: $SHA256"
        id: get_sha
        
      - name: Update Homebrew Formula
        run: |
          cd homebrew-tap
          
          # Update formula file
          if [ -f "Formula/warpclip.rb" ]; then
            sed -i '' "s|url \".*\"|url \"https://github.com/mquinnv/warpclip/archive/refs/tags/v${{ steps.get_version.outputs.VERSION }}.tar.gz\"|" Formula/warpclip.rb
            sed -i '' "s|sha256 \".*\"|sha256 \"${{ steps.get_sha.outputs.SHA256 }}\"|" Formula/warpclip.rb
            
            # Configure Git
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            
            # Commit and push formula changes
            git add Formula/warpclip.rb
            git commit -m "Update warpclip to v${{ steps.get_version.outputs.VERSION }}"
            git push
          else
            echo "Formula file not found at Formula/warpclip.rb"
            exit 1
          fi

